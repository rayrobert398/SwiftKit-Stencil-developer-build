orbs:
  bundle-install: toshimaru/bundle-install@0.3.1

defaults:
  - &macos-config
    parallelism: 1
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      BUNDLE_PATH: vendor/bundle
    macos:
      xcode: "11.4.1"
    shell: /bin/bash --login -eo pipefail
  - &linux-config
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      BUNDLE_PATH: vendor/bundle
    shell: /bin/bash --login -eo pipefail
  - &prepare-storage
    run:
      name: Create directories for artifacts and reports
      command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
  - &fetch-xcode-logs
    run:
      name: Getting Xcode activity logs
      command: find $HOME/Library/Developer/Xcode/DerivedData -name '*.xcactivitylog' -exec cp {} $CIRCLE_ARTIFACTS/xcactivitylog \; || true
  - &store-artifacts
    store_artifacts:
      path: /tmp/circleci-artifacts


version: 2.1
jobs:
  lint:
    <<: *macos-config
    steps:
      - *prepare-storage
      - checkout
      - bundle-install/bundle-install:
          cache_key_prefix: v1-macos
      - run:
          name: Lint source code
          command: bundle exec rake lint:code
      - run:
          name: Lint tests source code
          command: bundle exec rake lint:tests
      - *store-artifacts

  xcode-build-and-test:
    <<: *macos-config
    steps:
      - *prepare-storage
      - checkout
      - bundle-install/bundle-install:
          cache_key_prefix: v1-macos
      - run:
          name: Run all tests
          command: bundle exec rake xcode:test
      - store_test_results:
          path: /tmp/circleci-test-results
      - *fetch-xcode-logs
      - *store-artifacts

  spm-linux-four-two-build-and-test:
    <<: *linux-config
    docker:
      - image: marekfort/docker-stencilswiftkit:swift-4.2
    steps:
      - *prepare-storage
      - checkout
      - bundle-install/bundle-install:
          cache_key_prefix: v1-linux
      - run:
          name: Run all tests
          command: bundle install && bundle exec rake spm:test
      - *store-artifacts


  spm-linux-five-two-build-and-test:
    <<: *linux-config
    docker:
      - image: marekfort/docker-stencilswiftkit:swift-5.2
    steps:
      - *prepare-storage
      - checkout
      - bundle-install/bundle-install:
          cache_key_prefix: v1-linux
      - run:
          name: Run all tests
          command: bundle install && bundle exec rake spm:test
      - *store-artifacts

  spm-mac-build-and-test:
    <<: *macos-config
    steps:
      - *prepare-storage
      - checkout
      - bundle-install/bundle-install:
          cache_key_prefix: v1-macos
      - run:
          name: Run all tests
          command: bundle exec rake spm:test
      - *store-artifacts

  check-deploy:
    <<: *macos-config
    steps:
      - *prepare-storage
      - checkout
      - bundle-install/bundle-install:
          cache_key_prefix: v1-macos
      - restore_cache:
          keys:
            - cocoapods-{{ checksum "Podfile.lock" }}
            - cocoapods-
      - run:
          name: Lint podspec
          command: bundle exec rake pod:lint
      - *store-artifacts
      -  save_cache:
          key: cocoapods-{{ checksum "Podfile.lock" }}
          paths:
            - ~/.cocoapods


workflows:
  lint-buildandtest-checkdeploy:
    jobs:
      - lint
      - spm-linux-four-two-build-and-test
      - spm-linux-five-two-build-and-test
      - spm-mac-build-and-test
      - xcode-build-and-test
      - check-deploy:
          requires:
            - lint
            - spm-linux-four-two-build-and-test
            - spm-linux-five-two-build-and-test
            - spm-mac-build-and-test
            - xcode-build-and-test
